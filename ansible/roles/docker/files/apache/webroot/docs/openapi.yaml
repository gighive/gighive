openapi: 3.0.3
info:
  title: Gighive Upload API
  version: 0.1.0
  description: |
    Minimal spec for media uploads aligned with the DB model used by the timeline and database views.
servers:
  - url: /api
paths:
  /uploads:
    post:
      summary: Upload a media file
      description: |
        Accepts a media file and optional metadata. Stores file, records metadata, and optionally
        attaches to an existing session.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                  description: The media file to upload (audio/video)
                media_type:
                  type: string
                  enum: [audio, video]
                  description: Optional explicit type (server will also infer from mime/extension)
                event_date:
                  type: string
                  format: date
                  description: Event date (YYYY-MM-DD). Defaults to today if omitted
                event_type:
                  type: string
                  enum: [band, wedding]
                  description: Type of event
                org_name:
                  type: string
                  description: Organization name (e.g., band or wedding short name). Defaults by deployment
                label:
                  type: string
                  description: Song title (band) or wedding table label
                participants:
                  type: string
                  description: Comma-separated participant names (musicians or guests)
                session_id:
                  type: integer
                  format: int64
                  description: Optional session to attach the uploaded file to
                location:
                  type: string
                rating:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/File'
                  - type: object
                    properties:
                      session_id:
                        type: integer
                        format: int64
                      event_date:
                        type: string
                        format: date
                      org_name:
                        type: string
                      event_type:
                        type: string
                        enum: [band, wedding]
                      seq:
                        type: integer
                      label:
                        type: string
                      participants:
                        type: string
        '400':
          description: Bad request (validation/mime/size)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '413':
          description: Payload too large
        '415':
          description: Unsupported media type
        '500':
          description: Server error
  /uploads/{id}:
    get:
      summary: Get uploaded file metadata
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '404':
          description: Not found
        '500':
          description: Server error
components:
  schemas:
    File:
      type: object
      properties:
        id:
          type: integer
          format: int64
        file_name:
          type: string
        file_type:
          type: string
          enum: [audio, video]
        duration_seconds:
          type: integer
          format: int32
        mime_type:
          type: string
        size_bytes:
          type: integer
          format: int64
        checksum_sha256:
          type: string
        session_id:
          type: integer
          format: int64
          nullable: true
        created_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
